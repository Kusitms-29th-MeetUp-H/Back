name: Main Service CICD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  check-skip:
    name: Check ot skip CI
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, 'Main') || contains(github.event.head_commit.message, 'Global') }}
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build:
    runs-on: ubuntu-latest
    needs: check-skip
    steps:
      - uses: actions/checkout@v3
      - name: 🍀 JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🍀 application.yml 설정
        run: |
          cd ./Main
          cd ./src/main
          mkdir resources
          cd ./resources
          touch ./application.yml
          echo "$APPLICATION_DEV" > ./application.yml
        env:
          APPLICATION_MAIN: ${{ secrets.APPLICATION_DEV }}

      - name: 🍀 gradle build를 위한 권한 설정
        run: |
          cd ./Main
          chmod +x gradlew

      - name: 🍀 gradle build
        run: |
          cd ./Main
          ./gradlew build -x test

      - name: 🍀 docker image build 후 docker hub에 push
        run: |
          cd ./Main
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }} .
          docker push ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}

      - name: 🍀 deploy.sh 파일을 EC2 development server로 전달
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "./scripts/deploy.sh"
          target: "/home/ubuntu/"

      - name: 🍀 docker-compose.yml 파일을 EC2 development server로 전달
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "./Main/docker-compose.yml"
          target: "/home/ubuntu/"

      - name: 🍀 docker hub 에서 pull 후 deploy
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}
            chmod 777 ./scripts/deploy.sh
            cp ./scripts/deploy.sh ./deploy.sh
            cd ./Main
            ./deploy.sh
            docker image prune -f
